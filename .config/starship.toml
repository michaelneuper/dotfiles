format = """
[[$directory${custom.giturl}$git_branch$git_state]($style)](yellow)$git_status
$character"""

palette = "gruvbox_dark"

[palettes.gruvbox_dark]
color_fg0 = '#fbf1c7'
color_bg1 = '#3c3836'
color_bg3 = '#665c54'
color_blue = '#458588'
color_aqua = '#689d6a'
color_green = '#98971a'
color_orange = '#d65d0e'
color_purple = '#b16286'
color_red = '#cc241d'
color_yellow = '#d79921'

[directory]
# style = "bold violet"
truncation_length = 0
truncate_to_repo = true
repo_root_format = "[$before_root_path]($style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style) "
read_only =  ""
read_only_style = "red"

[custom.giturl]
# disabled = true
style = "white"
description = "Display symbol for remote Git server"
command = """
GIT_REMOTE=$(command git ls-remote --get-url 2> /dev/null)
if [[ "$GIT_REMOTE" =~ "github" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "gitlab" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "bitbucket" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "git" ]]; then
    GIT_REMOTE_SYMBOL=""
else
    GIT_REMOTE_SYMBOL=" "
fi
echo "$GIT_REMOTE_SYMBOL "
"""

when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
format = "at $output"

[git_status]
style = "bold"
ahead = "[${count}](green)"
behind = "[${count}](red)"
up_to_date = ""
deleted = "[ ](red)"
conflicted = ""
untracked = "[ ](white)"
stashed = ""
modified = "[ ](yellow)"
staged = ""
renamed = "[ ](purple)"
format = ' [($all_status$ahead_behind )]($style)'

[git_branch]
# symbol = "[](color_bg1) "
# style = "fg:color_fg0 bg:color_bg1"
# format =  '  on [$symbol$branch]($style)[](color_bg1)'
symbol = " "
format =  "  on [$symbol$branch]($style)"

[character]  # Tells whether last command was successful or not
success_symbol = "[❯](bold green)"
error_symbol = "[❯](bold red)"
vicmd_symbol = "[❮](bold purple)"

[status]
symbol = "x"
format = '[\[$symbol$status_common_meaning$status_signal_name$status_maybe_int\]]($style)'
map_symbol = true
disabled = false
